package calculator;
public class calculator 
{
	public static void main(String[] args) 
	{
		System.out.println(add(3, 5));       
		System.out.println(subtract(10, 7)); 
		System.out.println(multiply(4, 6));  
		System.out.println(divide(20, 5));   
		System.out.println(modulus(20, 3));   
	}
	public static int add(int a, int b) 
	{
        return a + b;
    }
    public static int subtract(int a, int b) 
    {
        return a - b;
    }
    public static int multiply(int a, int b) 
    {
        return a * b;
    }
    public static int divide(int a, int b) 
    {
        if (b == 0) 
        {
            throw new ArithmeticException("Cannot divide by zero");
        }
        return a / b;
    }
    public static int modulus(int a, int b) 
    {
        if (b == 0) 
        {
            throw new ArithmeticException("Cannot divide by zero");
        }
        return a % b;
    }
}









package calculator;
import org.junit.Test;
import static org.junit.Assert.*;
public class junit 
{
    
    @Test
    public void testAdd() 
    {
        assertEquals(8, calculator.add(3, 5));
    }
   

	@Test
    public void testSubtract() {
        assertEquals(3, calculator.subtract(10, 7));
    }
    
    @Test
    public void testMultiply() {
        assertEquals(24, calculator.multiply(4, 6));
    }
    
    @Test
    public void testDivide() {
        assertEquals(4, calculator.divide(20, 5));
        try {
            calculator.divide(10, 0);
            fail("Expected ArithmeticException to be thrown");
        } catch (ArithmeticException e) {
            assertEquals("Cannot divide by zero", e.getMessage());
        }
    }
    
    @Test
    public void testModulus() {
        assertEquals(2, calculator.modulus(20, 3));
        try {
            calculator.modulus(10, 0);
            fail("Expected ArithmeticException to be thrown");
        } catch (ArithmeticException e) {
            assertEquals("Cannot divide by zero", e.getMessage());
        }
    }
}